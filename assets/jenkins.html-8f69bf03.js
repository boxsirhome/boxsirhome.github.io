import{_ as s,o as a,c as n,f as l}from"./app-c4ddd265.js";const e="/assets/1-df8edeea.png",o="/assets/2-1db4655c.png",t="/assets/3-8ffc1b54.png",p="/assets/4-c4fea11e.png",r="/assets/5-7aeffd30.png",c="/assets/6-4a4b3896.png",i="/assets/7-cd001115.png",d="/assets/8-84f54ff5.png",y="/assets/100-bafc45ad.png",B={},g=l('<h2 id="新建item流程" tabindex="-1"><a class="header-anchor" href="#新建item流程" aria-hidden="true">#</a> 新建Item流程</h2><p>1.输入一个任务名称，并且复制一个其他配置<br><img src="'+e+'" alt="" loading="lazy"></p><p>2.输入“目标服务器JAR存储路径”和“服务名”<br><img src="'+o+'" alt="" loading="lazy"></p><p>3.输入代码仓库地址<br><img src="'+t+'" alt="" loading="lazy"></p><p>4.指定拉取的分支，点击“Save”<br><img src="'+p+'" alt="" loading="lazy"></p><p>5.回到列表选择服务“Build”<br><img src="'+r+'" alt="" loading="lazy"></p><p>6.选择分支“Build”<br><img src="'+c+'" alt="" loading="lazy"></p><p>7.可以看到这样的视图，也可以点击“Builds”里面的详细；找到&quot;Console Output&quot;查看启动日志<br><img src="'+i+'" alt="" loading="lazy"></p><p>8.启动成功<br><img src="'+d+`" alt="" loading="lazy"></p><h2 id="服务器查看日志" tabindex="-1"><a class="header-anchor" href="#服务器查看日志" aria-hidden="true">#</a> 服务器查看日志</h2><p>1.如果只需要运行jar包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">/app/config-center</span><span style="color:#ABB2BF;">         </span><span style="color:#7F848E;font-style:italic;"># 到指定jar包目录下</span></span>
<span class="line"><span style="color:#61AFEF;">./start.sh</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">config-center.jar</span><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;"># 运行jar包</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2.查看启动日志</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki one-dark-pro" style="background-color:#282c34;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;">tail</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-fn500</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">config-center.log</span><span style="color:#ABB2BF;">   </span><span style="color:#7F848E;font-style:italic;">#实时查看 auth-center.log 文件的最后 500 行，并在文件更新时持续输出新内容。Ctrl + C退出</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">ps</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">-ef</span><span style="color:#ABB2BF;">|</span><span style="color:#61AFEF;">grep</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">java</span><span style="color:#ABB2BF;">               </span><span style="color:#7F848E;font-style:italic;">#查看系统正在运行的 Java 进程</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>参考下图<br><img src="`+y+'" alt="" loading="lazy"></p>',15),m=[g];function _(b,f){return a(),n("div",null,m)}const h=s(B,[["render",_],["__file","jenkins.html.vue"]]);export{h as default};
